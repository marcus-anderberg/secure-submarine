{"ast":null,"code":"import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport secrets from './secretsReducer'; // rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\n\nvar rootReducer = combineReducers({\n  errors: errors,\n  // contains registrationMessage and loginMessage\n  loginMode: loginMode,\n  // will have a value of 'login' or 'registration' to control which screen is shown\n  user: user,\n  // will have an id and username if someone is logged in\n  secrets: secrets\n});\nexport default rootReducer;","map":{"version":3,"sources":["/Users/marcus/Documents/Prime/tier2/secure-submarine/src/redux/reducers/index.js"],"names":["combineReducers","errors","loginMode","user","secrets","rootReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAOC,OAAP,MAAoB,kBAApB,C,CAEA;AACA;AACA;AAEA;AACA;;AACA,IAAMC,WAAW,GAAGL,eAAe,CAAC;AAClCC,EAAAA,MAAM,EAANA,MADkC;AAC1B;AACRC,EAAAA,SAAS,EAATA,SAFkC;AAEvB;AACXC,EAAAA,IAAI,EAAJA,IAHkC;AAG5B;AACNC,EAAAA,OAAO,EAAPA;AAJkC,CAAD,CAAnC;AAOA,eAAeC,WAAf","sourcesContent":["import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport secrets from './secretsReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  secrets,\n});\n\nexport default rootReducer;\n"]},"metadata":{},"sourceType":"module"}