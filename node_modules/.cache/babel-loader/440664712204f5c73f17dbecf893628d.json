{"ast":null,"code":"var secretsReducer = function secretsReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'SET_SECRETS':\n      return action.payload;\n\n    case 'UNSET_SECRETS':\n      return [];\n\n    default:\n      return state;\n  }\n}; // user will be on the redux state at:\n// state.user\n\n\nexport default secretsReducer;","map":{"version":3,"sources":["/Users/marcus/Documents/Prime/tier2/secure-submarine/src/redux/reducers/secretsReducer.js"],"names":["secretsReducer","state","action","type","payload"],"mappings":"AAAA,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,aAAOD,MAAM,CAACE,OAAd;;AACF,SAAK,eAAL;AACE,aAAO,EAAP;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATH,C,CAWE;AACA;;;AACA,eAAeD,cAAf","sourcesContent":["const secretsReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_SECRETS':\n        return action.payload;\n      case 'UNSET_SECRETS':\n        return [];\n      default:\n        return state;\n    }\n  };\n  \n  // user will be on the redux state at:\n  // state.user\n  export default secretsReducer;\n  "]},"metadata":{},"sourceType":"module"}